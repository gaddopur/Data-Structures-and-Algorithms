<snippet>
	<content><![CDATA[
struct Dsu {
	int comps, n;
	std::vector<int> par, siz;

	Dsu(int _n) {
		n = _n;
		par.resize(n+1), siz.resize(n+1);
		for(int i = 0; i <= n; i++)
			par[i] = i, siz[i] = 1;
		comps = n;
	}
	int root(int x) {
		return (par[x] == x ? x : par[x] = root(par[x]));
	}
	void merge(int x, int y) {
		x = root(x), y = root(y);
		if(x == y) return;
		if(siz[y] > siz[x]) swap(x, y);
		siz[x] += siz[y];
		par[y] = x;
		comps--;
	}
	std::vector<vi> get_component() {
		std::vector<std::vector<int> > ans;
		std::vector<int> vis(n+1);
		for(int i = 1; i <= n; i++) {
			int r = root(i);
			if(vis[r] == -1) {
				vis[r] = si(ans);
				ans.pb(std::vector<int> ());
			}
			ans[vis[r]].pb(i);
		}
		return ans;
	} 
};
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>Dsu</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
